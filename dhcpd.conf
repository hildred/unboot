#########################
#			#
#  OPTION DECLERATIONS	#
#			#
#########################

option rfc3442-classless-static-routes	code 121 = array of unsigned integer 8;
option test	code 224 = string;

# grub options
# ---- -------
option grub	code 150 = text;

# etherboot options
# --------- -------

# Definition of Etherboot options
# (taken from vendortags.html)

# We use an encapsulated option space to avoid polluting the site-local DHCP option space
#
option space etherboot;
option etherboot-encapsulated-options	code 150 = encapsulate etherboot;

# Definition of option codes within the etherboot-encapsulated-options space
#
option etherboot.extensions-path code 18 = string;
option etherboot.magic		code 128 = string; # e4:45:74:68:00:00;
option etherboot.kernel-cmdline	code 129 = string;
option etherboot.menu-opts	code 160 = string;
option etherboot.nic-dev-id	code 175 = string; # from etherboot
option etherboot.menu-selection	code 176 = unsigned integer 8;

option etherboot.motd-1		code 184 = string;   # motd line 1
option etherboot.motd-2		code 185 = string;   # motd line 2
option etherboot.motd-3		code 186 = string;   # motd line 3
option etherboot.motd-4		code 187 = string;   # motd line 4
option etherboot.motd-5		code 188 = string;   # motd line 5
option etherboot.motd-6		code 189 = string;   # motd line 6
option etherboot.motd-7		code 190 = string;   # motd line 7
option etherboot.motd-8		code 191 = string;   # motd line 8

option etherboot.image-1	code 192 = string;   # menu entry 1
option etherboot.image-2	code 193 = string;   # menu entry 2
option etherboot.image-3	code 194 = string;   # menu entry 3
option etherboot.image-4	code 195 = string;   # menu entry 4
option etherboot.image-5	code 196 = string;   # menu entry 5
option etherboot.image-6	code 197 = string;   # menu entry 6
option etherboot.image-7	code 198 = string;   # menu entry 7
option etherboot.image-8	code 199 = string;   # menu entry 8
option etherboot.image-9	code 200 = string;   # menu entry 9
option etherboot.image-10	code 201 = string;   # menu entry 10
option etherboot.image-11	code 202 = string;   # menu entry 11
option etherboot.image-12	code 203 = string;   # menu entry 12
option etherboot.image-13	code 204 = string;   # menu entry 13
option etherboot.image-14	code 205 = string;   # menu entry 14
option etherboot.image-15	code 206 = string;   # menu entry 15
option etherboot.image-16	code 207 = string;   # menu entry 16

option etherboot.kmod		code 254 = string;

# Legacy support for Etherboot options as site-local options (i.e. non-encapsulated)
# Note: options defined after the switch to encapsulated options should not be defined here
#

option legacy-etherboot-magic		code 128 = string;

option legacy-etherboot-kernel-cmdline	code 129 = string;
option legacy-etherboot-menu-opts	code 160 = string; # name value pairs
option legacy-etherboot-menu-selection	code 176 = unsigned integer 8;

option legacy-etherboot-motd-1		code 184 = string;
option legacy-etherboot-motd-2		code 185 = string;
option legacy-etherboot-motd-3		code 186 = string;
option legacy-etherboot-motd-4		code 187 = string;
option legacy-etherboot-motd-5		code 188 = string;
option legacy-etherboot-motd-6		code 189 = string;
option legacy-etherboot-motd-7		code 190 = string;
option legacy-etherboot-motd-8		code 191 = string;

option legacy-etherboot-image-1		code 192 = string;
option legacy-etherboot-image-2		code 193 = string;
option legacy-etherboot-image-3		code 194 = string;
option legacy-etherboot-image-4		code 195 = string;
option legacy-etherboot-image-5		code 196 = string;
option legacy-etherboot-image-6		code 197 = string;
option legacy-etherboot-image-7		code 198 = string;
option legacy-etherboot-image-8		code 199 = string;
option legacy-etherboot-image-9		code 200 = string;
option legacy-etherboot-image-10	code 201 = string;
option legacy-etherboot-image-11	code 202 = string;
option legacy-etherboot-image-12	code 203 = string;
option legacy-etherboot-image-13	code 204 = string;
option legacy-etherboot-image-14	code 205 = string;
option legacy-etherboot-image-15	code 206 = string;
option legacy-etherboot-image-16	code 207 = string;

# PXE options
# --- -------
option client-arch code 93 = array of unsigned integer 16;
#http://www.iana.org/assignments/dhcpv6-parameters/processor-architecture.csv
#http://www.iana.org/assignments/dhcpv6-parameters/dhcpv6-parameters.xhtml#processor-architecture
#  Type	Architecture Name             	Reference
#  ----	-----------------             	---------
#    0	x86 BIOS                      	RFC5970, RFC4578
#    1	NEC/PC98 (DEPRECATED)         	RFC5970, RFC4578
#    2	Itanium                       	RFC5970, RFC4578
#    3	DEC Alpha (DEPRECATED)        	RFC5970, RFC4578
#    4	Arc x86 (DEPRECATED)          	RFC5970, RFC4578
#    5	Intel Lean Client (DEPRECATED)	RFC5970, RFC4578
#    6	x86 UEFI                      	RFC5970, RFC4578
#    7	x64 UEFI                      	RFC5970, RFC4578
#    8	EFI Xscale (DEPRECATED)       	RFC5970, RFC4578
#    9	EBC                           	RFC5970, RFC4578
#   10	ARM 32-bit UEFI               	RFC5970
#   11	ARM 64-bit UEFI               	RFC5970
#   12	PowerPC Open Firmware         	Thomas_Huth
#   13	PowerPC ePAPR                 	Thomas_Huth
#   14	POWER OPAL v3                 	Jeremy_Kerr
#   15	x86 uefi boot from http       	Samer_El-Haj-Mahmoud
#   16	x64 uefi boot from http       	Samer_El-Haj-Mahmoud
#   17	ebc boot from http            	Samer_El-Haj-Mahmoud
#   18	arm uefi 32 boot from http    	Samer_El-Haj-Mahmoud
#   19	arm uefi 64 boot from http    	Samer_El-Haj-Mahmoud
#   20	pc/at bios boot from http     	Samer_El-Haj-Mahmoud
#   21	arm 32 uboot                  	Joseph_Shifflett
#   22	arm 64 uboot                  	Joseph_Shifflett
#   23	arm uboot 32 boot from http   	Joseph_Shifflett
#   24	arm uboot 64 boot from http   	Joseph_Shifflett

option client-driver code 94 = {unsigned integer 8,unsigned integer 8,unsigned integer 8};
#option client-machine-identifier 97 = string;

# Definition of PXE specific options
# Code 1:	Multicast IP address of bootfile
# Code 2:	UDP port that client should monitor for MTFTP responses
# Code 3:	UDP port that MTFTP servers are using to listen for MTFTP requests
# Code 4:	Number of secondes a client must listen for activity before trying
#		to start a new MTFTP transfer
# Code 5:	Number of secondes a client must listen before trying to restart
#		a MTFTP transfer

# define Option for the PXE class
option space PXE;
option PXE.mtftp-ip		code 1 = ip-address;
option PXE.mtftp-cport		code 2 = unsigned integer 16;
option PXE.mtftp-sport		code 3 = unsigned integer 16;
option PXE.mtftp-tmout		code 4 = unsigned integer 8;
option PXE.mtftp-delay		code 5 = unsigned integer 8;
option PXE.discovery-control	code 6 = unsigned integer 8;
option PXE.discovery-mcast-addr	code 7 = ip-address;

# EFI options
# --- -------

# syslinux/pxelinux options
# -------- -------- -------
option space pxelinux;
option pxelinux.magic		code 208 = string;
option pxelinux.magic		f1:00:74:7e;

option pxelinux.configfile	code 209 = text;
option pxelinux.pathprefix	code 210 = text;
option pxelinux.reboottime	code 211 = unsigned integer 32;

# ipxe options
# ---- -------

option space ipxe;
option ipxe-encap-opts		code 175 = encapsulate ipxe;

# iPXE options, can be set in DHCP response packet
option ipxe.priority		code   1 = signed integer 8;
option ipxe.keep-san		code   8 = unsigned integer 8;
option ipxe.skip-san-boot	code   9 = unsigned integer 8;
option ipxe.syslogs		code  85 = string;
option ipxe.cert		code  91 = string;
option ipxe.privkey		code  92 = string;
option ipxe.crosscert		code  93 = string;
option ipxe.no-pxedhcp		code 176 = unsigned integer 8;
option ipxe.bus-id		code 177 = string;
option ipxe.bios-drive		code 189 = unsigned integer 8;
option ipxe.username		code 190 = string;
option ipxe.password		code 191 = string;
option ipxe.reverse-username	code 192 = string;
option ipxe.reverse-password	code 193 = string;
option ipxe.version		code 235 = string;
option iscsi-initiator-iqn	code 203 = string;

# iPXE feature flags, set in DHCP request packet
option ipxe.pxeext		code 16 = unsigned integer 8;
option ipxe.iscsi		code 17 = unsigned integer 8;
option ipxe.aoe			code 18 = unsigned integer 8;
option ipxe.http		code 19 = unsigned integer 8;
option ipxe.https		code 20 = unsigned integer 8;
option ipxe.tftp		code 21 = unsigned integer 8;
option ipxe.ftp			code 22 = unsigned integer 8;
option ipxe.dns			code 23 = unsigned integer 8;
option ipxe.bzimage		code 24 = unsigned integer 8;
option ipxe.multiboot		code 25 = unsigned integer 8;
option ipxe.slam		code 26 = unsigned integer 8;
option ipxe.srp			code 27 = unsigned integer 8;
option ipxe.nbi			code 32 = unsigned integer 8;
option ipxe.pxe			code 33 = unsigned integer 8;
option ipxe.elf			code 34 = unsigned integer 8;
option ipxe.comboot		code 35 = unsigned integer 8;
option ipxe.efi			code 36 = unsigned integer 8;
option ipxe.fcoe		code 37 = unsigned integer 8;
option ipxe.vlan		code 38 = unsigned integer 8;
option ipxe.menu		code 39 = unsigned integer 8;
option ipxe.sdi			code 40 = unsigned integer 8;
option ipxe.nfs			code 41 = unsigned integer 8;

# apple bsdp options
# ----- ---- -------
option space bsdp;
option bsdp.message_type		code 1 = unsigned integer 8;
option bsdp.bsdp_version		code 2 = unsigned integer 16;
option bsdp.server_identifier		code 3 = ip-address;
option bsdp.server_priority		code 4 = unsigned integer 16;
option bsdp.reply_port			code 5 = unsigned integer 16;
option bsdp.boot_image_list_path	code 6 = string;
#option bsdp.default_boot_image_id	code 7 = { unsigned integer 8, unsigned integer 8, unsigned integer 16 };
option bsdp.default_boot_image_id	code 7 = string;
					#image type 0 os9
					#	    1 osx
					#	    2 osx server
					#	    3 hwdiag
					#index 1-4095 local
					#index 4096 - 65535 global
#option bsdp.selected_boot_image_id	code 8 = { unsigned integer 8, unsigned integer 8, unsigned integer 16 };
option bsdp.selected_boot_image_id	code 8 = string;
#option bsdp.boot_image_list		code 9 = { unsigned integer 8, unsigned integer 8, unsigned integer 16, string };
option bsdp.boot_image_list		code 9 = string;
#option bsdp.legacy_flag			code 10 = null;
option bsdp.legacy_flag			code 10 = string; # must be of zero length
option bsdp.attribute_filter		code 11 = array of {unsigned integer 8, unsigned integer 8};
option bsdp.max_msg_size		code 12 = unsigned integer 16;
option bsdp.machine_name		code 130 = string;
option bsdp-43 code 43 = encapsulate bsdp;

#Mac NetBoot Options
option mac-nc-client-unknown code 220 = string;
option mac-nc-client-id code 221 = string;
option mac-version code 230 = string;
option mac-username code 232 = text;
option mac-password code 233 = text;
option mac-nb-img code 234 = string;
option mac-apps-img code 235 = string;
option mac-machine-name code 237 = text;
option mac-client-nb-img code 238 = string;

############
#	   #
#  global  #
#	   #
############

# dhcpd options
# ----- -------
authoritative;
ddns-update-style none;
ddns-updates off;
ignore client-updates;
#get-lease-hostnames	true;
allow booting;
allow bootp;

log-facility local7;

# default client options
# ------- ------ -------
option domain-name		"example.com";
option domain-search		"example.com";
option domain-name-servers	192.168.0.1;
option ntp-servers		192.168.0.1;
option time-servers		192.168.0.1;
option log-servers		192.168.0.2;
option netbios-name-servers	192.168.0.3;
option netbios-dd-server	192.168.0.3;
option netbios-node-type	0x8;
option netbios-scope		"";
option lpr-servers		192.168.0.4;
option time-offset		-25200; # MST
option fqdn.no-client-update	true;

# Disable ProxyDHCP, we're in control of the primary DHCP server
option ipxe.no-pxedhcp		1;

# TFTP server defaults to DHCP server and is specified in both
# next-server field and tftp-server-name option field
#
option tftp-server-name = binary-to-ascii ( 10, 8, ".", config-option dhcp-server-identifier );
server-name = config-option tftp-server-name;
next-server = config-option dhcp-server-identifier;

# client class specific options
# ------ ----- -------- -------

if option etherboot.nic-dev-id = 01:0e:11:ae:32 { option etherboot.kmod "netel100"; }
if option etherboot.nic-dev-id = 01:0e:11:ae:34 { option etherboot.kmod "netel10"; }
if option etherboot.nic-dev-id = 01:0e:11:ae:35 { option etherboot.kmod "netflex3i"; }
if option etherboot.nic-dev-id = 01:0e:11:ae:40 { option etherboot.kmod "netel100d"; }
if option etherboot.nic-dev-id = 01:0e:11:ae:43 { option etherboot.kmod "netel100pi"; }
if option etherboot.nic-dev-id = 01:0e:11:b0:11 { option etherboot.kmod "netel100i"; }
if option etherboot.nic-dev-id = 01:0e:11:b0:12 { option etherboot.kmod "netelligent_10_t2"; }
if option etherboot.nic-dev-id = 01:0e:11:b0:30 { option etherboot.kmod "netelligent_10_100_ws_5100"; }
if option etherboot.nic-dev-id = 01:0e:11:f1:30 { option etherboot.kmod "thunder"; }
if option etherboot.nic-dev-id = 01:0e:11:f1:50 { option etherboot.kmod "netflex3b"; }
if option etherboot.nic-dev-id = 01:10:0b:00:20 { option etherboot.kmod "dp83815"; }
if option etherboot.nic-dev-id = 01:10:0b:00:22 { option etherboot.kmod "ns83820"; }
if option etherboot.nic-dev-id = 01:10:11:00:02 { option etherboot.kmod "dc21040"; }
if option etherboot.nic-dev-id = 01:10:11:00:09 { option etherboot.kmod "ds21140"; }
if option etherboot.nic-dev-id = 01:10:11:00:14 { option etherboot.kmod "dc21041"; }
if option etherboot.nic-dev-id = 01:10:11:00:19 { option etherboot.kmod "ds21142"; }
if option etherboot.nic-dev-id = 01:10:22:20:00 { option etherboot.kmod "pcnet32"; }
if option etherboot.nic-dev-id = 01:10:22:20:01 { option etherboot.kmod "amdhomepna"; }
if option etherboot.nic-dev-id = 01:10:22:26:25 { option etherboot.kmod "pcnetfastiii"; }
if option etherboot.nic-dev-id = 01:10:22:74:62 { option etherboot.kmod "amd8111e"; }
if option etherboot.nic-dev-id = 01:10:39:09:00 { option etherboot.kmod "sis900"; }
if option etherboot.nic-dev-id = 01:10:39:70:16 { option etherboot.kmod "sis7016"; }
if option etherboot.nic-dev-id = 01:10:4a:09:81 { option etherboot.kmod "tulip-0981"; }
if option etherboot.nic-dev-id = 01:10:4a:27:74 { option etherboot.kmod "SGThomson-STE10100A"; }
if option etherboot.nic-dev-id = 01:10:50:08:40 { option etherboot.kmod "winbond840"; }
if option etherboot.nic-dev-id = 01:10:50:09:40 { option etherboot.kmod "winbond940"; }
if option etherboot.nic-dev-id = 01:10:50:5a:5a { option etherboot.kmod "winbond940f"; }
if option etherboot.nic-dev-id = 01:10:8d:00:12 { option etherboot.kmod "oc2325"; }
if option etherboot.nic-dev-id = 01:10:8d:00:13 { option etherboot.kmod "oc2183"; }
if option etherboot.nic-dev-id = 01:10:8d:00:14 { option etherboot.kmod "oc2326"; }
if option etherboot.nic-dev-id = 01:10:b7:12:01 { option etherboot.kmod "3c982a"; }
if option etherboot.nic-dev-id = 01:10:b7:12:02 { option etherboot.kmod "3c982b"; }
if option etherboot.nic-dev-id = 01:10:b7:45:00 { option etherboot.kmod "3c450"; }
if option etherboot.nic-dev-id = 01:10:b7:45:00 { option etherboot.kmod "3c450-1"; }
if option etherboot.nic-dev-id = 01:10:b7:59:00 { option etherboot.kmod "3c590"; }
if option etherboot.nic-dev-id = 01:10:b7:59:50 { option etherboot.kmod "3c595"; }
if option etherboot.nic-dev-id = 01:10:b7:59:51 { option etherboot.kmod "3c595-1"; }
if option etherboot.nic-dev-id = 01:10:b7:59:52 { option etherboot.kmod "3c595-2"; }
if option etherboot.nic-dev-id = 01:10:b7:60:55 { option etherboot.kmod "3c556"; }
if option etherboot.nic-dev-id = 01:10:b7:76:46 { option etherboot.kmod "3csoho100-tx"; }
if option etherboot.nic-dev-id = 01:10:b7:76:46 { option etherboot.kmod "3csoho100-tx-1"; }
if option etherboot.nic-dev-id = 01:10:b7:77:70 { option etherboot.kmod "3c-airconnect"; }
if option etherboot.nic-dev-id = 01:10:b7:90:00 { option etherboot.kmod "3c900-tpo"; }
if option etherboot.nic-dev-id = 01:10:b7:90:00 { option etherboot.kmod "3c905-tpo"; }
if option etherboot.nic-dev-id = 01:10:b7:90:01 { option etherboot.kmod "3c900-t4"; }
if option etherboot.nic-dev-id = 01:10:b7:90:01 { option etherboot.kmod "3c905-t4"; }
if option etherboot.nic-dev-id = 01:10:b7:90:04 { option etherboot.kmod "3c900b-tpo"; }
if option etherboot.nic-dev-id = 01:10:b7:90:04 { option etherboot.kmod "3c905b-tpo"; }
if option etherboot.nic-dev-id = 01:10:b7:90:05 { option etherboot.kmod "3c900b-combo"; }
if option etherboot.nic-dev-id = 01:10:b7:90:05 { option etherboot.kmod "3c905b-combo"; }
if option etherboot.nic-dev-id = 01:10:b7:90:06 { option etherboot.kmod "3c900b-tpb2"; }
if option etherboot.nic-dev-id = 01:10:b7:90:06 { option etherboot.kmod "3c905b-tpb2"; }
if option etherboot.nic-dev-id = 01:10:b7:90:0a { option etherboot.kmod "3c900b-fl"; }
if option etherboot.nic-dev-id = 01:10:b7:90:0a { option etherboot.kmod "3c905b-fl"; }
if option etherboot.nic-dev-id = 01:10:b7:90:50 { option etherboot.kmod "3c905-tpo100"; }
if option etherboot.nic-dev-id = 01:10:b7:90:51 { option etherboot.kmod "3c905-combo"; }
if option etherboot.nic-dev-id = 01:10:b7:90:55 { option etherboot.kmod "3c905b-tpo100"; }
if option etherboot.nic-dev-id = 01:10:b7:90:56 { option etherboot.kmod "3c905b-t4"; }
if option etherboot.nic-dev-id = 01:10:b7:90:58 { option etherboot.kmod "3c905b-9058"; }
if option etherboot.nic-dev-id = 01:10:b7:90:5a { option etherboot.kmod "3c905b-fx"; }
if option etherboot.nic-dev-id = 01:10:b7:92:00 { option etherboot.kmod "3c905c-tpo"; }
if option etherboot.nic-dev-id = 01:10:b7:92:02 { option etherboot.kmod "3c920b-emb-ati"; }
if option etherboot.nic-dev-id = 01:10:b7:92:10 { option etherboot.kmod "3c920b-emb-wnm"; }
if option etherboot.nic-dev-id = 01:10:b7:93:00 { option etherboot.kmod "3csoho100b-tx"; }
if option etherboot.nic-dev-id = 01:10:b7:98:00 { option etherboot.kmod "3c980"; }
if option etherboot.nic-dev-id = 01:10:b7:98:00 { option etherboot.kmod "3c980-cyclone-1"; }
if option etherboot.nic-dev-id = 01:10:b7:98:05 { option etherboot.kmod "3c9805"; }
if option etherboot.nic-dev-id = 01:10:b7:98:05 { option etherboot.kmod "3c9805-1"; }
if option etherboot.nic-dev-id = 01:10:b8:00:05 { option etherboot.kmod "epic100"; }
if option etherboot.nic-dev-id = 01:10:b8:00:06 { option etherboot.kmod "smc-83c175"; }
if option etherboot.nic-dev-id = 01:10:b9:52:61 { option etherboot.kmod "ali1563"; }
if option etherboot.nic-dev-id = 01:10:bd:0e:34 { option etherboot.kmod "surecom-ne34"; }
if option etherboot.nic-dev-id = 01:10:d9:05:12 { option etherboot.kmod "mx98713"; }
if option etherboot.nic-dev-id = 01:10:d9:05:31 { option etherboot.kmod "mx98715"; }
if option etherboot.nic-dev-id = 01:10:de:00:37 { option etherboot.kmod "nforce10"; }
if option etherboot.nic-dev-id = 01:10:de:00:38 { option etherboot.kmod "nforce11"; }
if option etherboot.nic-dev-id = 01:10:de:00:56 { option etherboot.kmod "nforce8"; }
if option etherboot.nic-dev-id = 01:10:de:00:57 { option etherboot.kmod "nforce9"; }
if option etherboot.nic-dev-id = 01:10:de:00:66 { option etherboot.kmod "nforce2"; }
if option etherboot.nic-dev-id = 01:10:de:00:86 { option etherboot.kmod "nforce4"; }
if option etherboot.nic-dev-id = 01:10:de:00:8c { option etherboot.kmod "nforce5"; }
if option etherboot.nic-dev-id = 01:10:de:00:d6 { option etherboot.kmod "nforce3"; }
if option etherboot.nic-dev-id = 01:10:de:00:df { option etherboot.kmod "nforce7"; }
if option etherboot.nic-dev-id = 01:10:de:00:e6 { option etherboot.kmod "nforce6"; }
if option etherboot.nic-dev-id = 01:10:de:01:c3 { option etherboot.kmod "nforce"; }
if option etherboot.nic-dev-id = 01:10:de:02:68 { option etherboot.kmod "nforce12"; }
if option etherboot.nic-dev-id = 01:10:de:02:69 { option etherboot.kmod "nforce13"; }
if option etherboot.nic-dev-id = 01:10:de:03:72 { option etherboot.kmod "nforce14"; }
if option etherboot.nic-dev-id = 01:10:de:03:73 { option etherboot.kmod "nforce15"; }
if option etherboot.nic-dev-id = 01:10:ec:80:29 { option etherboot.kmod "rtl8029"; }
if option etherboot.nic-dev-id = 01:10:ec:81:29 { option etherboot.kmod "rtl8129"; }
if option etherboot.nic-dev-id = 01:10:ec:81:38 { option etherboot.kmod "rtl8139b"; }
if option etherboot.nic-dev-id = 01:10:ec:81:39 { option etherboot.kmod "rtl8139"; }
if option etherboot.nic-dev-id = 01:10:ec:81:69 { option etherboot.kmod "r8169"; }
if option etherboot.nic-dev-id = 01:11:06:09:26 { option etherboot.kmod "via86c926"; }
if option etherboot.nic-dev-id = 01:11:06:30:43 { option etherboot.kmod "dlink-530tx-old"; }
if option etherboot.nic-dev-id = 01:11:06:30:53 { option etherboot.kmod "via6105m"; }
if option etherboot.nic-dev-id = 01:11:06:30:65 { option etherboot.kmod "dlink-530tx"; }
if option etherboot.nic-dev-id = 01:11:06:31:06 { option etherboot.kmod "via-rhine-6105"; }
if option etherboot.nic-dev-id = 01:11:06:31:19 { option etherboot.kmod "via-velocity"; }
if option etherboot.nic-dev-id = 01:11:06:61:00 { option etherboot.kmod "via-rhine-old"; }
if option etherboot.nic-dev-id = 01:11:12:12:11 { option etherboot.kmod "smc1211"; }
if option etherboot.nic-dev-id = 01:11:13:12:11 { option etherboot.kmod "smc1211-1"; }
if option etherboot.nic-dev-id = 01:11:13:12:16 { option etherboot.kmod "an983"; }
if option etherboot.nic-dev-id = 01:11:13:12:17 { option etherboot.kmod "mxic-98715"; }
if option etherboot.nic-dev-id = 01:11:13:95:11 { option etherboot.kmod "tulip-9511"; }
if option etherboot.nic-dev-id = 01:11:1a:10:23 { option etherboot.kmod "ss1023"; }
if option etherboot.nic-dev-id = 01:11:48:44:00 { option etherboot.kmod "tg3-9DXX"; }
if option etherboot.nic-dev-id = 01:11:48:45:00 { option etherboot.kmod "tg3-9MXX"; }
if option etherboot.nic-dev-id = 01:11:5d:00:03 { option etherboot.kmod "xircomtulip"; }
if option etherboot.nic-dev-id = 01:11:86:03:00 { option etherboot.kmod "dlink-528"; }
if option etherboot.nic-dev-id = 01:11:86:10:02 { option etherboot.kmod "dfe530txs"; }
if option etherboot.nic-dev-id = 01:11:86:13:00 { option etherboot.kmod "dfe538"; }
if option etherboot.nic-dev-id = 01:11:86:13:40 { option etherboot.kmod "dfe690txd"; }
if option etherboot.nic-dev-id = 01:11:86:15:61 { option etherboot.kmod "tulip-1561"; }
if option etherboot.nic-dev-id = 01:11:86:43:00 { option etherboot.kmod "dlink-r8169"; }
if option etherboot.nic-dev-id = 01:11:ad:00:02 { option etherboot.kmod "82c168"; }
if option etherboot.nic-dev-id = 01:11:ad:c1:15 { option etherboot.kmod "lc82c115"; }
if option etherboot.nic-dev-id = 01:11:f6:14:01 { option etherboot.kmod "compexrl2000"; }
if option etherboot.nic-dev-id = 01:11:f6:20:11 { option etherboot.kmod "compexrl100atx"; }
if option etherboot.nic-dev-id = 01:11:f6:98:81 { option etherboot.kmod "rl100tx"; }
if option etherboot.nic-dev-id = 01:12:59:a1:17 { option etherboot.kmod "allied8139"; }
if option etherboot.nic-dev-id = 01:12:59:a1:20 { option etherboot.kmod "tulip-a120"; }
if option etherboot.nic-dev-id = 01:12:5b:14:00 { option etherboot.kmod "ax88140"; }
if option etherboot.nic-dev-id = 01:12:60:38:73 { option etherboot.kmod "dwl520"; }
if option etherboot.nic-dev-id = 01:12:60:38:73 { option etherboot.kmod "hwp01170"; }
if option etherboot.nic-dev-id = 01:12:60:38:73 { option etherboot.kmod "prism2_pci"; }
if option etherboot.nic-dev-id = 01:12:6c:80:30 { option etherboot.kmod "emobility"; }
if option etherboot.nic-dev-id = 01:12:82:90:09 { option etherboot.kmod "davicom9009"; }
if option etherboot.nic-dev-id = 01:12:82:90:09 { option etherboot.kmod "dm9009"; }
if option etherboot.nic-dev-id = 01:12:82:90:09 { option etherboot.kmod "dmfe9009"; }
if option etherboot.nic-dev-id = 01:12:82:91:00 { option etherboot.kmod "davicom9100"; }
if option etherboot.nic-dev-id = 01:12:82:91:00 { option etherboot.kmod "dm9100"; }
if option etherboot.nic-dev-id = 01:12:82:91:00 { option etherboot.kmod "dmfe9100"; }
if option etherboot.nic-dev-id = 01:12:82:91:02 { option etherboot.kmod "davicom9102"; }
if option etherboot.nic-dev-id = 01:12:82:91:02 { option etherboot.kmod "dm9102"; }
if option etherboot.nic-dev-id = 01:12:82:91:02 { option etherboot.kmod "dmfe9102"; }
if option etherboot.nic-dev-id = 01:12:82:91:32 { option etherboot.kmod "davicom9132"; }
if option etherboot.nic-dev-id = 01:12:82:91:32 { option etherboot.kmod "dm9132"; }
if option etherboot.nic-dev-id = 01:12:82:91:32 { option etherboot.kmod "dmfe9132"; }
if option etherboot.nic-dev-id = 01:12:c3:00:58 { option etherboot.kmod "holtek80232"; }
if option etherboot.nic-dev-id = 01:12:c3:55:98 { option etherboot.kmod "holtek80229"; }
if option etherboot.nic-dev-id = 01:13:17:09:81 { option etherboot.kmod "an981"; }
if option etherboot.nic-dev-id = 01:13:17:09:85 { option etherboot.kmod "centaur-p"; }
if option etherboot.nic-dev-id = 01:13:17:19:85 { option etherboot.kmod "centaur-c"; }
if option etherboot.nic-dev-id = 01:13:17:95:11 { option etherboot.kmod "an983b"; }
if option etherboot.nic-dev-id = 01:13:85:41:00 { option etherboot.kmod "ma301"; }
if option etherboot.nic-dev-id = 01:13:d1:ab:02 { option etherboot.kmod "tulip-ab02"; }
if option etherboot.nic-dev-id = 01:13:d1:ab:03 { option etherboot.kmod "tulip-ab03"; }
if option etherboot.nic-dev-id = 01:13:d1:ab:06 { option etherboot.kmod "fe2000vx"; }
if option etherboot.nic-dev-id = 01:13:d1:ab:08 { option etherboot.kmod "tulip-ab08"; }
if option etherboot.nic-dev-id = 01:13:f0:02:01 { option etherboot.kmod "sundance"; }
if option etherboot.nic-dev-id = 01:14:c1:00:08 { option etherboot.kmod "LANai-Z8E"; }
if option etherboot.nic-dev-id = 01:14:e4:16:44 { option etherboot.kmod "tg3-5700"; }
if option etherboot.nic-dev-id = 01:14:e4:16:45 { option etherboot.kmod "tg3-5701"; }
if option etherboot.nic-dev-id = 01:14:e4:16:46 { option etherboot.kmod "tg3-5702"; }
if option etherboot.nic-dev-id = 01:14:e4:16:47 { option etherboot.kmod "tg3-5703"; }
if option etherboot.nic-dev-id = 01:14:e4:16:48 { option etherboot.kmod "tg3-5704"; }
if option etherboot.nic-dev-id = 01:14:e4:16:4a { option etherboot.kmod "bnx2-5706"; }
if option etherboot.nic-dev-id = 01:14:e4:16:4c { option etherboot.kmod "bnx2-5708"; }
if option etherboot.nic-dev-id = 01:14:e4:16:4d { option etherboot.kmod "tg3-5702FE"; }
if option etherboot.nic-dev-id = 01:14:e4:16:53 { option etherboot.kmod "tg3-5705"; }
if option etherboot.nic-dev-id = 01:14:e4:16:54 { option etherboot.kmod "tg3-5705_2"; }
if option etherboot.nic-dev-id = 01:14:e4:16:59 { option etherboot.kmod "tg3-5721"; }
if option etherboot.nic-dev-id = 01:14:e4:16:5d { option etherboot.kmod "tg3-5705M"; }
if option etherboot.nic-dev-id = 01:14:e4:16:5e { option etherboot.kmod "tg3-5705M_2"; }
if option etherboot.nic-dev-id = 01:14:e4:16:77 { option etherboot.kmod "tg3-5751"; }
if option etherboot.nic-dev-id = 01:14:e4:16:96 { option etherboot.kmod "tg3-5782"; }
if option etherboot.nic-dev-id = 01:14:e4:16:9c { option etherboot.kmod "tg3-5788"; }
if option etherboot.nic-dev-id = 01:14:e4:16:a6 { option etherboot.kmod "tg3-5702X"; }
if option etherboot.nic-dev-id = 01:14:e4:16:a7 { option etherboot.kmod "tg3-5703X"; }
if option etherboot.nic-dev-id = 01:14:e4:16:a8 { option etherboot.kmod "tg3-5704S"; }
if option etherboot.nic-dev-id = 01:14:e4:16:aa { option etherboot.kmod "bnx2-5706S"; }
if option etherboot.nic-dev-id = 01:14:e4:16:ac { option etherboot.kmod "bnx2-5708S"; }
if option etherboot.nic-dev-id = 01:14:e4:16:c6 { option etherboot.kmod "tg3-5702A3"; }
if option etherboot.nic-dev-id = 01:14:e4:16:c7 { option etherboot.kmod "tg3-5703A3"; }
if option etherboot.nic-dev-id = 01:14:e4:17:0d { option etherboot.kmod "tg3-5901"; }
if option etherboot.nic-dev-id = 01:14:e4:17:0e { option etherboot.kmod "tg3-5901_2"; }
if option etherboot.nic-dev-id = 01:14:ea:ab:06 { option etherboot.kmod "fnw3603tx"; }
if option etherboot.nic-dev-id = 01:14:ea:ab:07 { option etherboot.kmod "fnw3800tx"; }
if option etherboot.nic-dev-id = 01:14:f1:18:03 { option etherboot.kmod "lanfinity"; }
if option etherboot.nic-dev-id = 01:15:00:13:60 { option etherboot.kmod "delta8139"; }
if option etherboot.nic-dev-id = 01:15:16:08:00 { option etherboot.kmod "MTD800"; }
if option etherboot.nic-dev-id = 01:15:16:08:03 { option etherboot.kmod "MTD803"; }
if option etherboot.nic-dev-id = 01:15:16:08:91 { option etherboot.kmod "MTD891"; }
if option etherboot.nic-dev-id = 01:15:b3:5a:44 { option etherboot.kmod "MT23108"; }
if option etherboot.nic-dev-id = 01:15:b3:62:74 { option etherboot.kmod "MT25204"; }
if option etherboot.nic-dev-id = 01:15:b3:62:78 { option etherboot.kmod "MT25208"; }
if option etherboot.nic-dev-id = 01:15:b3:62:82 { option etherboot.kmod "MT25218"; }
if option etherboot.nic-dev-id = 01:15:e8:01:30 { option etherboot.kmod "correga"; }
if option etherboot.nic-dev-id = 01:16:26:84:10 { option etherboot.kmod "tulip-8410"; }
if option etherboot.nic-dev-id = 01:16:38:11:00 { option etherboot.kmod "smc2602w"; }
if option etherboot.nic-dev-id = 01:16:ab:11:00 { option etherboot.kmod "gl24110p"; }
if option etherboot.nic-dev-id = 01:16:ab:11:01 { option etherboot.kmod "16ab-1101"; }
if option etherboot.nic-dev-id = 01:16:ab:11:02 { option etherboot.kmod "wdt11"; }
if option etherboot.nic-dev-id = 01:16:ec:01:16 { option etherboot.kmod "usr-r8169"; }
if option etherboot.nic-dev-id = 01:16:ec:36:85 { option etherboot.kmod "usr2415"; }
if option etherboot.nic-dev-id = 01:17:37:ab:08 { option etherboot.kmod "tulip-1737-ab08"; }
if option etherboot.nic-dev-id = 01:17:37:ab:09 { option etherboot.kmod "tulip-ab09"; }
if option etherboot.nic-dev-id = 01:17:3b:03:e8 { option etherboot.kmod "tg3-ac1000"; }
if option etherboot.nic-dev-id = 01:17:3b:03:e9 { option etherboot.kmod "tg3-ac1001"; }
if option etherboot.nic-dev-id = 01:17:3b:03:ea { option etherboot.kmod "tg3-ac9100"; }
if option etherboot.nic-dev-id = 01:17:3b:03:eb { option etherboot.kmod "tg3-ac1003"; }
if option etherboot.nic-dev-id = 01:19:24:07:03 { option etherboot.kmod "falcon"; }
if option etherboot.nic-dev-id = 01:19:24:c1:01 { option etherboot.kmod "ef1002"; }
if option etherboot.nic-dev-id = 01:40:33:13:60 { option etherboot.kmod "addtron8139"; }
if option etherboot.nic-dev-id = 01:4a:14:50:00 { option etherboot.kmod "nv5000sc"; }
if option etherboot.nic-dev-id = 01:80:86:00:39 { option etherboot.kmod "intel21145"; }
if option etherboot.nic-dev-id = 01:80:86:10:00 { option etherboot.kmod "e1000-82542"; }
if option etherboot.nic-dev-id = 01:80:86:10:01 { option etherboot.kmod "e1000-82543gc-fiber"; }
if option etherboot.nic-dev-id = 01:80:86:10:04 { option etherboot.kmod "e1000-82543gc-copper"; }
if option etherboot.nic-dev-id = 01:80:86:10:08 { option etherboot.kmod "e1000-82544ei-copper"; }
if option etherboot.nic-dev-id = 01:80:86:10:09 { option etherboot.kmod "e1000-82544ei-fiber"; }
if option etherboot.nic-dev-id = 01:80:86:10:0c { option etherboot.kmod "e1000-82544gc-copper"; }
if option etherboot.nic-dev-id = 01:80:86:10:0d { option etherboot.kmod "e1000-82544gc-lom"; }
if option etherboot.nic-dev-id = 01:80:86:10:0e { option etherboot.kmod "e1000-82540em"; }
if option etherboot.nic-dev-id = 01:80:86:10:0f { option etherboot.kmod "e1000-82545em-copper"; }
if option etherboot.nic-dev-id = 01:80:86:10:10 { option etherboot.kmod "e1000-82546eb-copper"; }
if option etherboot.nic-dev-id = 01:80:86:10:11 { option etherboot.kmod "e1000-82545em-fiber"; }
if option etherboot.nic-dev-id = 01:80:86:10:12 { option etherboot.kmod "e1000-82546eb-fiber"; }
if option etherboot.nic-dev-id = 01:80:86:10:13 { option etherboot.kmod "e1000-82541ei"; }
if option etherboot.nic-dev-id = 01:80:86:10:15 { option etherboot.kmod "e1000-82540em-lom"; }
if option etherboot.nic-dev-id = 01:80:86:10:16 { option etherboot.kmod "e1000-82540ep-lom"; }
if option etherboot.nic-dev-id = 01:80:86:10:17 { option etherboot.kmod "e1000-82540ep"; }
if option etherboot.nic-dev-id = 01:80:86:10:18 { option etherboot.kmod "e1000-82541ep"; }
if option etherboot.nic-dev-id = 01:80:86:10:19 { option etherboot.kmod "e1000-82547ei"; }
if option etherboot.nic-dev-id = 01:80:86:10:1d { option etherboot.kmod "e1000-82546eb-quad-copper"; }
if option etherboot.nic-dev-id = 01:80:86:10:1e { option etherboot.kmod "e1000-82540ep-lp"; }
if option etherboot.nic-dev-id = 01:80:86:10:26 { option etherboot.kmod "e1000-82545gm-copper"; }
if option etherboot.nic-dev-id = 01:80:86:10:27 { option etherboot.kmod "e1000-82545gm-fiber"; }
if option etherboot.nic-dev-id = 01:80:86:10:28 { option etherboot.kmod "e1000-82545gm-serdes"; }
if option etherboot.nic-dev-id = 01:80:86:10:29 { option etherboot.kmod "id1029"; }
if option etherboot.nic-dev-id = 01:80:86:10:30 { option etherboot.kmod "id1030"; }
if option etherboot.nic-dev-id = 01:80:86:10:31 { option etherboot.kmod "82801cam"; }
if option etherboot.nic-dev-id = 01:80:86:10:32 { option etherboot.kmod "eepro100-1032"; }
if option etherboot.nic-dev-id = 01:80:86:10:33 { option etherboot.kmod "eepro100-1033"; }
if option etherboot.nic-dev-id = 01:80:86:10:34 { option etherboot.kmod "eepro100-1034"; }
if option etherboot.nic-dev-id = 01:80:86:10:35 { option etherboot.kmod "eepro100-1035"; }
if option etherboot.nic-dev-id = 01:80:86:10:36 { option etherboot.kmod "eepro100-1036"; }
if option etherboot.nic-dev-id = 01:80:86:10:37 { option etherboot.kmod "eepro100-1037"; }
if option etherboot.nic-dev-id = 01:80:86:10:38 { option etherboot.kmod "id1038"; }
if option etherboot.nic-dev-id = 01:80:86:10:39 { option etherboot.kmod "82562et"; }
if option etherboot.nic-dev-id = 01:80:86:10:3a { option etherboot.kmod "id103a"; }
if option etherboot.nic-dev-id = 01:80:86:10:3b { option etherboot.kmod "82562etb"; }
if option etherboot.nic-dev-id = 01:80:86:10:3c { option etherboot.kmod "eepro100-103c"; }
if option etherboot.nic-dev-id = 01:80:86:10:3d { option etherboot.kmod "eepro100-103d"; }
if option etherboot.nic-dev-id = 01:80:86:10:3e { option etherboot.kmod "eepro100-103e"; }
if option etherboot.nic-dev-id = 01:80:86:10:50 { option etherboot.kmod "82562ez"; }
if option etherboot.nic-dev-id = 01:80:86:10:51 { option etherboot.kmod "eepro100-1051"; }
if option etherboot.nic-dev-id = 01:80:86:10:51 { option etherboot.kmod "prove"; }
if option etherboot.nic-dev-id = 01:80:86:10:59 { option etherboot.kmod "82551qm"; }
if option etherboot.nic-dev-id = 01:80:86:10:75 { option etherboot.kmod "e1000-82547gi"; }
if option etherboot.nic-dev-id = 01:80:86:10:76 { option etherboot.kmod "e1000-82541gi"; }
if option etherboot.nic-dev-id = 01:80:86:10:77 { option etherboot.kmod "e1000-82541gi-mobile"; }
if option etherboot.nic-dev-id = 01:80:86:10:78 { option etherboot.kmod "e1000-82541er"; }
if option etherboot.nic-dev-id = 01:80:86:10:79 { option etherboot.kmod "e1000-82546gb-copper"; }
if option etherboot.nic-dev-id = 01:80:86:10:7a { option etherboot.kmod "e1000-82546gb-fiber"; }
if option etherboot.nic-dev-id = 01:80:86:10:7b { option etherboot.kmod "e1000-82546gb-serdes"; }
if option etherboot.nic-dev-id = 01:80:86:10:7c { option etherboot.kmod "e1000-82541pi"; }
if option etherboot.nic-dev-id = 01:80:86:10:96 { option etherboot.kmod "e1000_80003es2lan"; }
if option etherboot.nic-dev-id = 01:80:86:12:09 { option etherboot.kmod "82559er"; }
if option etherboot.nic-dev-id = 01:80:86:12:27 { option etherboot.kmod "82865"; }
if option etherboot.nic-dev-id = 01:80:86:12:28 { option etherboot.kmod "82556"; }
if option etherboot.nic-dev-id = 01:80:86:12:29 { option etherboot.kmod "eepro100"; }
if option etherboot.nic-dev-id = 01:80:86:24:49 { option etherboot.kmod "82562em"; }
if option etherboot.nic-dev-id = 01:80:86:24:59 { option etherboot.kmod "82562-1"; }
if option etherboot.nic-dev-id = 01:80:86:24:5d { option etherboot.kmod "82562-2"; }
if option etherboot.nic-dev-id = 01:80:86:52:00 { option etherboot.kmod "eepro100-5200"; }
if option etherboot.nic-dev-id = 01:80:86:52:01 { option etherboot.kmod "eepro100-5201"; }
if option etherboot.nic-dev-id = 01:8e:2e:30:00 { option etherboot.kmod "ktiet32p2"; }
if option etherboot.nic-dev-id = 01:ec:80:ec:00 { option etherboot.kmod "f5d6000"; }
if option etherboot.nic-dev-id = 01:fe:fe:ef:ef { option etherboot.kmod "pnic"; }
if option etherboot.nic-dev-id = 01:ff:ff:81:39 { option etherboot.kmod "clone-rtl8139"; }

log(debug,concat ( "bsdp:",binary-to-ascii ( 10, 8, ".", option bsdp.reply_port)));
if exists bsdp.reply_port {
	log(debug, "option bsdp.reply_port");
	log(debug, option bsdp.reply_port);
}
#log(debug, option vendor-class-identifier);
if substring (option vendor-class-identifier, 0, 9) = "PXEClient" {
	log(debug, "1.pxe");
	log(debug, binary-to-ascii(10,16,",", option client-arch));

	#option pxelinux.reboottime	code 211 = unsigned integer 32;
	site-option-space "pxelinux";

	if exists dhcp-parameter-request-list {
		option dhcp-parameter-request-list = concat (option dhcp-parameter-request-list,d0,d1,d2,d3);
	}

	if (
		exists ipxe.http and
		exists ipxe.menu and
		#exists ipxe.nfs and
		( ( exists ipxe.pxe and
			exists ipxe.bzimage and
			exists ipxe.elf and
		#	exists ipxe.comboot and
			exists ipxe.iscsi
		) or (
			exists ipxe.efi
		) )
	) {
		log(debug, "2.menu");
		if exists dhcp-server-identifier {
			log(debug, concat("http://", binary-to-ascii ( 10, 8, ".", option dhcp-server-identifier), "/ipxe/boot.ipxe"));
			filename = concat("http://", binary-to-ascii ( 10, 8, ".", option dhcp-server-identifier), "/ipxe/boot.ipxe");
			option pxelinux.pathprefix = concat("http://", binary-to-ascii ( 10, 8, ".", option dhcp-server-identifier), "/tftpboot/");
			#option pxelinux.configfile "~";
		} else {
			log(debug, "no server identifier");
			#option pxelinux.pathprefix "http://192.168.0.1/tftpboot/";
			#filename "http://192.168.0.1/ipxe/boot";
		}
		if exists tftp-server-name {
			log(debug, binary-to-ascii( 10,8, ".", config-option tftp-server-name));
			log(debug, "-");
			log(debug, binary-to-ascii( 10,8, ".", option tftp-server-name));
			log(debug, "-");
			log(debug, binary-to-ascii( 10,8, ".", tftp-server-name));
		} else {
			log(debug, "no tftp");
		}
		log(debug, "-");
		log(debug, config-option bootfile-name);
		log(debug, "-");
		log(debug, option bootfile-name);
		log(debug, "-");
		log(debug, bootfile-name);
		log(debug, "x");
	} elsif not exists client-arch {
		log(debug, "2.unk");
		#guessing . . .
		filename "undionly.kpxe";
	} elsif substr(option client-arch,0) = option client-arch {
		log(debug, "2.null");
		#guessing . . .
		filename "undionly.kpxe";
	} elsif option client-arch = 0 { # 0	x86 BIOS
		log(debug, "2.0");
		filename "ipxe.pxe";
		#filename "undionly.kpxe";
	} elsif option client-arch = 1 { # 1	NEC/PC98 (DEPRECATED)
		log(debug, "2.1");
	} elsif option client-arch = 2 { # 2	Itanium
		log(debug, "2.2");
	} elsif option client-arch = 3 { # 3	DEC Alpha (DEPRECATED)
		log(debug, "2.3");
	} elsif option client-arch = 4 { # 4	Arc x86 (DEPRECATED)
		log(debug, "2.4");
	} elsif option client-arch = 5 { # 5	Intel Lean Client (DEPRECATED)
		log(debug, "2.5");
	} elsif option client-arch = 6 { # 6	x86 UEFI
		log(debug, "2.6");
		#filename "EFI32/grub/grub32.efi";
		#filename "bin-i386-efi/snponly.efi";
		filename "EFI32/ipxe.efi";
		#filename "EFI32/snponly.efi";
	} elsif option client-arch = 7 { # 7	EFI BC
		log(debug, "2.7");
	} elsif option client-arch = 8 { # 8	EFI Xscale (DEPRECATED)
		log(debug, "2.8");
	} elsif option client-arch = 9 { # 9	EFI x86-64
		log(debug, "2.9");
		#filename "EFI64/grub/grub64.efi";
		#filename "bin-x86_64-efi/snponly.efi";
		filename "EFI64/ipxe.efi";
		#filename "EFI64/snponly.efi";
	} elsif option client-arch = 10 { # 10	ARM 32-bit UEFI
		log(debug, "2.10");
	} elsif option client-arch = 11 { # 11	ARM 64-bit UEFI
		log(debug, "2.11");
	} elsif option client-arch = 12 { # 12	PowerPC Open Firmware
		log(debug, "2.12");
	} elsif option client-arch = 13 { # 13	PowerPC ePAPR
		log(debug, "2.13");
	} elsif option client-arch = 14 { # 14	POWER OPAL v3
		log(debug, "2.14");
	} elsif option client-arch = 15 { # 15	x86 uefi boot from http
		log(debug, "2.15");
		option vendor-class-identifier "HTTPClient";
		filename = concat("http://", binary-to-ascii ( 10, 8, ".", option dhcp-server-identifier), "/tftpboot/EFI32/ipxe.efi");
	} elsif option client-arch = 16 { # 16	x64 uefi boot from http
		log(debug, "2.16");
		option vendor-class-identifier "HTTPClient";
		filename = concat("http://", binary-to-ascii ( 10, 8, ".", option dhcp-server-identifier), "/tftpboot/EFI64/ipxe.efi");
	} elsif option client-arch = 17 { # 17	ebc boot from http
		log(debug, "2.17");
	} elsif option client-arch = 18 { # 18	arm uefi 32 boot from http
		log(debug, "2.18");
	} elsif option client-arch = 19 { # 19	arm uefi 64 boot from http
		log(debug, "2.19");
	} elsif option client-arch = 20 { # 20	pc/at bios boot from http
		log(debug, "2.20");
	} elsif option client-arch = 21 { # 21	arm 32 uboot
		log(debug, "2.21");
	} elsif option client-arch = 22 { # 22	arm 64 uboot
		log(debug, "2.22");
	} elsif option client-arch = 23 { # 23	arm uboot 32 boot from http
		log(debug, "2.23");
	} elsif option client-arch = 24 { # 24	arm uboot 64 boot from http
		log(debug, "2.24");
	} else {
		log(debug, "2.X");
		log(debug, option client-arch);
		#guessing . . .
		#filename "/tftpboot/pxelinux-i386.0";
		filename "undionly.kpxe";
		#filename "/grub/grub.pxe";
		#filename "/grub2/grub.pxe";
	}
	#if exists user-class and option user-class = "iPXE" {
		#filename "http://boot.ipxe.org/demo/boot.php";
		#option root-path = concat "iscsi:",binary-to-ascii ( 10, 8, ".", config-option dhcp-server-identifier),":::0:iqn.2001-04.us.hildred:storage.disk2.sys1.xyz";
		#filename "/pxelinux.0";
	#} else {
		#filename "undionly.kpxe";
	#}
} elsif substring (option vendor-class-identifier, 0, 9) = "AAPLBSDPC" {
	log(debug, "1.bsdp");
	log(debug, binary-to-ascii(16, 8, ":", option bsdp.reply_port));
	log(debug, binary-to-ascii(16, 8, ":", option bsdp.bsdp_version));

	option bsdp.bsdp_version 0x0101;
	option bsdp.server_identifier = config-option dhcp-server-identifier;
	option bsdp.server_priority 65535;
	option dhcp-parameter-request-list 1,3,17,43,60;
	#option dhcp-parameter-request-list 1,3,11,17,43,60;

	option vendor-class-identifier "AAPLBSDPC";
	if (option dhcp-message-type = 1) {
		log(debug, "1.bsdp.1");
		log(debug, option vendor-class-identifier);
		log(debug, binary-to-ascii(16, 8, ":", option bsdp.message_type));
		option bsdp.default_boot_image_id 01:00:00:01;	# Image ID (1)
		#filename "1.bsdp.1";
		#filename "/debian-installer/powerpc/./yaboot"; #works but expects conf file in root.
		filename "/debian-installer/powerpc64/./yaboot";
		#filename "/debian-installer/powerpc/./grub";
		#filename "/debian-installer/powerpc64/./grub";

			option bsdp.boot_image_list
				01:00:00:01:					# Image non-install ID 1
					07:4e:65:74:42:6f:6f:74:		# Name (length 7) 'NetBoot'
				81:00:00:02:					# Image install ID 2
					0a:4e:65:74:52:65:73:74:6f:72:65:	# Name (length 10) 'NetRestore'
				02:00:00:03:					# Image non-install ID 3
					05:74:65:73:74:31:			# Name (length 5) 'test1'
				82:00:00:04:					# Image install ID 4
					05:74:65:73:74:32:			# Name (length 5) 'test2'
				03:00:00:05:					# Image non-install ID 5
					05:74:65:73:74:33:			# Name (length 5) 'test3'
				83:00:00:06:					# Image install ID 6
					05:74:65:73:74:34;			# Name (length 5) 'test4'
	} elsif (option dhcp-message-type = 3) {
		log(debug, "1.bsdp.3");
		log(debug, binary-to-ascii(16, 8, ":", option bsdp.message_type));
		option bsdp.default_boot_image_id 01:00:00:01;	# Image ID (1)
		filename "1.bsdp.3";
			option bsdp.boot_image_list
				01:00:00:01:					# Image non-install ID 1
					07:4e:65:74:42:6f:6f:74:		# Name (length 7) 'NetBoot'
				81:00:00:02:					# Image install ID 2
					0a:4e:65:74:52:65:73:74:6f:72:65:	# Name (length 10) 'NetRestore'
				02:00:00:03:					# Image non-install ID 3
					05:74:65:73:74:31:			# Name (length 5) 'test1'
				82:00:00:04:					# Image install ID 4
					05:74:65:73:74:32:			# Name (length 5) 'test2'
				03:00:00:05:					# Image non-install ID 5
					05:74:65:73:74:33:			# Name (length 5) 'test3'
				83:00:00:06:					# Image install ID 6
					05:74:65:73:74:34;			# Name (length 5) 'test4'
	} elsif (option dhcp-message-type = 8) {
		log(debug, "1.bsdp.8");
		if option bsdp.message_type = 1 {
			log(debug, "1.bsdp.8.1_list");
			#log(debug, "bsdp_msgtype_list");

			option bsdp.message_type 1;			# list
			#option bsdp.server_identifier config-option dhcp-server-identifier;	# DHCP server;
			#option bsdp.default_boot_image_id 1 0 1;	# Image ID (1)
			option bsdp.default_boot_image_id 01:00:00:01;	# Image ID (1)

			option bsdp.boot_image_list
				01:00:00:01:					# Image non-install ID 1
					07:4e:65:74:42:6f:6f:74:		# Name (length 7) 'NetBoot'
				81:00:00:02:					# Image install ID 2
					0a:4e:65:74:52:65:73:74:6f:72:65:	# Name (length 10) 'NetRestore'
				02:00:00:03:					# Image non-install ID 3
					05:74:65:73:74:31:			# Name (length 5) 'test1'
				82:00:00:04:					# Image install ID 4
					05:74:65:73:74:32:			# Name (length 5) 'test2'
				03:00:00:05:					# Image non-install ID 5
					05:74:65:73:74:33:			# Name (length 5) 'test3'
				83:00:00:06:					# Image install ID 6
					05:74:65:73:74:34;			# Name (length 5) 'test4'
		} elsif option bsdp.message_type = 2 {
			log(debug, "1.bsdp.8.2_select");
			log(debug, option bsdp.selected_boot_image_id);
			log(debug, binary-to-ascii(16, 8, " ", option bsdp.selected_boot_image_id));
			#log(debug, "bspd_msgtype_select");

			option bsdp.message_type 2;			# select
			if option bsdp.selected_boot_image_id = 01:00:00:01 {
				option bsdp.selected_boot_image_id 01:00:00:01;
				#option bsdp.selected_boot_image_id 1 0 0x01;	# Image ID (1)
				if (substring(option vendor-class-identifier, 9, 5) = "/i386") {
					#filename "/shellia32.efi"; # works ok, now what?
					#filename "EFI32/syslinux.efi";
					filename "EFI32/snponly.efi";
					#filename "/refind/refind_ia32.efi"; # returns without doing anything
					#filename "/refit/refit/refit.efi"; # goes out to lunch
					#filename "EFI32/grub/grub32.efi"; # boots to grub prompt, can't read config file from disk.
					#filename "vmlinuz-3.13-0.bpo.1-686-pae"; # loads fine panics becouse it can't find root
					#filename "/m/elilo.efi"; # won't load kernel
				} elsif (substring(option vendor-class-identifier, 9, 4) = "/ppc") {
					filename "/debian-installer/powerpc64/./yaboot";
				} else {
					#filename "EFI64/snponly.efi";
					filename = option vendor-class-identifier;
				}
			} elsif option bsdp.selected_boot_image_id = 81:00:00:02 {
				option bsdp.selected_boot_image_id 81:00:00:02;
				filename = option vendor-class-identifier;
				option root-path = concat ("nfs:",binary-to-ascii ( 10, 8, ".", config-option dhcp-server-identifier),":/n:a.dmg");
				# fully working osx install.
			} elsif option bsdp.selected_boot_image_id = 02:00:00:03 {
				option bsdp.selected_boot_image_id 02:00:00:03;
				if (substring(option vendor-class-identifier, 9, 5) = "/i386") {
					# The Apple Boot Loader binary image.  This file will in turn TFTP the kernel image and extension cache.
					#filename "AAPLBSDPC/i386/booter";

					## JJM Root FS DMG on HTTP Server:
					# option root-path "http://192.168.7.1/Netboot/NetBootSP0/MacOSX10.4.5.i386.JJM.nbi/NetInstall-Restore.dmg";

					## JJm Root FS DMG on NFS Server.
					# (Note the placement of the second ":"  This indicates where /var/netboot is mounted on each client.
					# The Resources folder should be in the folder indicated by the :, /nbi in this instance.

					## NOTE: THIS ROOT PATH IS TOO LONG AND WILL NOT WORK.
					# option root-path "nfs:192.168.7.1:/disk/0/Netboot/NetBootSP0:MacOSX10.4.5.i386.JJM.nbi/NetInstall-Restore.dmg";

					## NOTE: Try to keep the root path as short as possible.  I copy the DMG files to /nbi and export that folder.
				} elsif (substring(option vendor-class-identifier, 9, 4) = "/ppc") {
					#option dhcp-parameter-request-list 1,3,6,12,15,17,43,53,54,60;
					# The Apple Boot Loader binary image.  This file will in turn TFTP the kernel image and extension cache.
					#filename "AAPLBSDPC/ppc/booter";

					## JJM Root FS DMG on HTTP Server:
					# option root-path "http://192.168.7.1/Netboot/NetBootSP0/MacOSX10.4.5.powerpc.JJM.nbi/NetInstall-Restore.dmg";
					## JJM Root FS DMG on NFS Server.
					# (Note the placement of the second ":"  This indicates where /var/netboot is mounted on each client.
					# The Resources folder should be in the folder indicated by the :, /nbi in this instance.

					## NOTE: THIS ROOT PATH IS TOO LONG AND WILL NOT WORK.
					# option root-path "nfs:192.168.7.1:/disk/0/Netboot/NetBootSP0:MacOSX10.4.5.powerpc.JJM.nbi/NetInstall-Restore.dmg";

					## NOTE: Try to keep the root path as short as possible.  I copy the DMG files to /nbi and export that folder.
					option root-path = concat ("nfs:",binary-to-ascii ( 10, 8, ".", config-option dhcp-server-identifier),":/n:NBI-ppc.dmg");
				} else {
					filename = option vendor-class-identifier;
				}
			} elsif option bsdp.selected_boot_image_id = 82:00:00:04 {
				option bsdp.selected_boot_image_id 82:00:00:04;
			} elsif option bsdp.selected_boot_image_id = 03:00:00:05 {
				option bsdp.selected_boot_image_id 03:00:00:05;
			} elsif option bsdp.selected_boot_image_id = 83:00:00:06 {
				option bsdp.selected_boot_image_id 83:00:00:06;
			} else {
				log(info, "bspd_selected_unknown_image");
			}
		} else {
			log(debug, "1.bsdp.8.error");
			log(info, "bspd_msgtype_failed");
		}
	} else {
		log(debug, "1.bsdp.?");
		log(debug, binary-to-ascii(16,8,":", option dhcp-message-type));
		log(debug,concat ( "bsdp:",binary-to-ascii ( 10, 8, ".", option bsdp.reply_port)));
	}

	if substring (option vendor-class-identifier, 9, 4) = "/ppc" {
		log(debug, "1.bsdp.p");
		option dhcp-parameter-request-list 1,3,6,12,15,17,43,53,54,60;
	}
} elsif substring (option vendor-class-identifier, 0, 9) = "Etherboot"{
	log(debug, "1.eth");

	# We must specify this value for etherboot-magic, or Etherboot will
	# ignore all other options.
	#
	option etherboot.magic E4:45:74:68:00:00; # NOT a mac address

	# Bootfile name: derive from etherboot.kmod (calculated below)
	# Use boot.nbi if no NIC_DEV_ID option present
	# (i.e. if etherboot.kmod doesn't get set)
	# Also pass filename back in filename field
	#
	option bootfile-name = pick-first-value (
		concat (
			"boot-",
			config-option etherboot.kmod,
			".nbi"
		),
		#"/grub2/grub.pxe",
		#"debian-live/i386/vmlinuz-2.6.32-5-486.nb",
		"/lts/vmlinuz-2.6.17.8-ltsp-1",
		"boot.nbi"
	);
	if option etherboot.nic-dev-id = 01:80:86:10:0e {
		option etherboot.kmod "e1000-82540em";
		filename = "/grub2/grub.pxe";
	} else{
		filename = config-option bootfile-name;
	}

	#option etherboot.kernel-cmdline " boot=live config netboot=nfs nfsroot=192.168.218.1:/srv/debian-live quiet";

	# Info message (includes client IP address, MAC address, hardware ID string,
	# server IP address and name of boot file)
	option etherboot.motd-4 = concat (
		"Using Etherboot to boot ",
		binary-to-ascii ( 10, 8, ".", leased-address ),
		" [",
		binary-to-ascii ( 16, 8, ":", suffix ( hardware, 6 ) ),
		"] [",
		pick-first-value ( option etherboot.nic-dev-id, "unknown card" ),
		"]", 0d:0a, "  from ",
		binary-to-ascii ( 10, 8, ".", option dhcp-server-identifier ),
		" with file ",
		config-option tftp-server-name,
		":",
		config-option bootfile-name,
		" [",
		pick-first-value ( config-option etherboot.kmod, "unknown module" ),
		"]", 0d:0a
	);

	# Legacy site-local option support
	# If client does not include an etherboot-encapsulated-options field in its DHCPREQUEST, then
	# it will not understand etherboot-encapsulated-options in the DHCPACK and so we must send
	# back the options as site-local options (i.e. not encapsulated).
	# Note: we need do this only for options that existed prior to the switch to encapsulation.
	#
	if not exists etherboot-encapsulated-options {
		option legacy-etherboot-magic		= config-option etherboot.magic;
		option legacy-etherboot-kernel-cmdline	= config-option etherboot.kernel-cmdline;
		option legacy-etherboot-menu-opts	= config-option etherboot.menu-opts;
		option legacy-etherboot-menu-selection	= config-option etherboot.menu-selection;
		option legacy-etherboot-motd-1		= config-option etherboot.motd-1;
		option legacy-etherboot-motd-2		= config-option etherboot.motd-2;
		option legacy-etherboot-motd-3		= config-option etherboot.motd-3;
		option legacy-etherboot-motd-4		= config-option etherboot.motd-4;
		option legacy-etherboot-motd-5		= config-option etherboot.motd-5;
		option legacy-etherboot-motd-6		= config-option etherboot.motd-6;
		option legacy-etherboot-motd-7		= config-option etherboot.motd-7;
		option legacy-etherboot-motd-8		= config-option etherboot.motd-8;
		option legacy-etherboot-image-1		= config-option etherboot.image-1;
		option legacy-etherboot-image-2		= config-option etherboot.image-2;
		option legacy-etherboot-image-3		= config-option etherboot.image-3;
		option legacy-etherboot-image-4		= config-option etherboot.image-4;
		option legacy-etherboot-image-5		= config-option etherboot.image-5;
		option legacy-etherboot-image-6		= config-option etherboot.image-6;
		option legacy-etherboot-image-7		= config-option etherboot.image-7;
		option legacy-etherboot-image-8		= config-option etherboot.image-8;
		option legacy-etherboot-image-9		= config-option etherboot.image-9;
		option legacy-etherboot-image-10	= config-option etherboot.image-10;
		option legacy-etherboot-image-11	= config-option etherboot.image-11;
		option legacy-etherboot-image-12	= config-option etherboot.image-12;
		option legacy-etherboot-image-13	= config-option etherboot.image-13;
		option legacy-etherboot-image-14	= config-option etherboot.image-14;
		option legacy-etherboot-image-15	= config-option etherboot.image-15;
		option legacy-etherboot-image-16	= config-option etherboot.image-16;
	}
} elsif substring (option vendor-class-identifier, 0, 5) = "LTSP-"{
	log(debug, "1.ltsp");
	option root-path = concat ( config-option tftp-server-name, ":/opt/ltsp-4.2/", substring(option vendor-class-identifier, 5, 99));
} elsif(option vendor-class-identifier = "d-i"){
	log(debug, "1.d-i");
	filename = concat ("http://",binary-to-ascii ( 10, 8, ".", config-option dhcp-server-identifier),"/debian/preseed.cfg");
	option test = concat ("http://",binary-to-ascii ( 10, 8, ".", config-option dhcp-server-identifier),"/debian/preseed.cfg");
} elsif substring (option vendor-class-identifier, 0, 7) = "dhcpcd-"{
	log(debug, "1.other");
	log(debug, option vendor-class-identifier);
} elsif substring (option vendor-class-identifier, 0, 2) = "PC"{
	log(debug, "1.pc");
	filename = "yaboot.pc";
} elsif exists vendor-class-identifier {
	log(debug, "1.unknown");
			option bsdp.boot_image_list
				01:00:00:01:					# Image non-install ID 1
					07:4e:65:74:42:6f:6f:74:		# Name (length 7) 'NetBoot'
				81:00:00:02:					# Image install ID 2
					0a:4e:65:74:52:65:73:74:6f:72:65:	# Name (length 10) 'NetRestore'
				02:00:00:03:					# Image non-install ID 3
					05:74:65:73:74:31:			# Name (length 5) 'test1'
				82:00:00:04:					# Image install ID 4
					05:74:65:73:74:32:			# Name (length 5) 'test2'
				03:00:00:05:					# Image non-install ID 5
					05:74:65:73:74:33:			# Name (length 5) 'test3'
				83:00:00:06:					# Image install ID 6
					05:74:65:73:74:34;			# Name (length 5) 'test4'
	log(debug, option vendor-class-identifier);
	#guessing . . .
	filename = option vendor-class-identifier;
	# hopefuly we'll get a log from the tftp server.
} elsif not exists mac-nc-client-id {
	if exists dhcp-message-type {
		log(debug, "1.none.1");
		#log(debug, binary-to-ascii(16,8, " ", option dhcp-message-type));
		#guessing . . .
		filename "_undionly.kpxe";
	} else {
		#log(debug, "1.none.2");
	}
} elsif option mac-nc-client-id = "Apple MacNC" {
	log(debug, "1.old mac");
	option dhcp-max-message-size 576;
	option dhcp-parameter-request-list
	              1, # subnet mask
	              3, # routers
		66, # server-name

	              220, 221, 230, 232, 233, 234, 235, 236, 237, 238; # mac options

	# put global macnc-specific options here...
	#option mac-version 0:0:0:0;
	filename "yaboot";
	next-server = config-option dhcp-server-identifier; # your tftp server
} else {
	log(debug, "1.help");
	log(debug, option mac-nc-client-id);
	#guessing . . .
	filename = option mac-nc-client-id;
}

##################
#  static hosts  #
##################

include "/etc/dhcp/static.conf";

##############
#  failover  #
##############

include "/etc/dhcp/failover.conf";

###################
#  dynamic hosts  #
###################

subnet 192.168.0.0 netmask 255.255.255.0 {
	option broadcast-address	192.168.0.255;
	option routers			192.168.0.254;
	option subnet-mask		255.255.255.0;

	pool {
		range 192.168.0.50 192.168.0.99;
		default-lease-time 7200; # 2 hours
		max-lease-time 86400; # 1 day
		deny unknown-clients;
	}

	pool {
		range 192.168.0.100 192.168.0.199;
		default-lease-time 3600; # 1 hour
		max-lease-time 7200; # 2 hours
		allow unknown-clients;
		deny known-clients;
	}
	#range dynamic-bootp 192.168.0.200 192.168.0.224;
}

# A fallback hostname, generated from the IP address
option host-name = concat ( "client_", binary-to-ascii ( 10, 8, "_", leased-address ) );

# client loging
# ------ ------
set vendor-string = option vendor-class-identifier;
set circuit = option agent.circuit-id;
set remote-id = option agent.remote-id;
#set dclass = option agent.DOCSIS-device-class;
set linksel = option agent.link-selection;
#set fname = config-option filename;
set cname = config-option host-name;
set nic = pick-first-value ( option etherboot.nic-dev-id, "unknown card" );
set kmod = pick-first-value ( config-option etherboot.kmod, "unknown module" );

